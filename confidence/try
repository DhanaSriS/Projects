import cv2

# Load pre-trained face detection cascade
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

# Load video file
video_capture = cv2.VideoCapture('video.mp4')

# Set threshold for low confidence
confidence_threshold = 0.1

while True:
    # Capture frame-by-frame
    ret, frame = video_capture.read()
    
    if not ret:
        break
    
    # Convert frame to grayscale for face detection
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    
    # Detect faces in the frame
    faces = face_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))
    
    # Calculate confidence based on the number of detected faces
    confidence = len(faces) / (frame.shape[0] * frame.shape[1])  # Normalize by frame size

    # Draw rectangles around detected faces
    for (x, y, w, h) in faces:
        cv2.rectangle(frame, (x, y), (x+w, y+h), (255, 0, 0), 2)
    
    # Display the resulting frame
    cv2.imshow('Video', frame)
    
    # Print confidence level and check if it is below the threshold
    print("Face Detection Confidence:", confidence)
    if confidence < confidence_threshold:
        print("Low confidence detected!")
    
    # Exit loop if 'q' is pressed
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Release video capture object and close windows
video_capture.release()
cv2.destroyAllWindows()
